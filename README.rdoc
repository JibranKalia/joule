= Joule

== Description

Joule is a  Ruby library for parsing bicycle powermeter data.

The following formats are supported:

* SRM (.srm)
* PowerTap (.csv)
* iBike (.csv)
* Garmin (.tcx)

After a file is parsed.  The following attributes are available:

data_points::
  An Array of DataPoint objects.  Contains all the data points from a file.
markers::
  An Array of Marker objects.  The first marker always represents the entire 
  file.  Marker averages, maximums, etc are only calculated, if the option 
  :calculate_markers_values => true is passed to parse().
peak_power::
  An Array of Hash objects representing the peak powers for a give duration (5
  second, 5 minute, 20  minute, etc).  This is also sometimes referred to the
  mean maximal power.  Peak powers are only available, if the options
  :calculate_peak_power_values => true and :durations are passed to parse().  
  Peak power calculations can add a significant amount of time to parsing, so  
  you can perform these later on if you want to with the 
  Joule::Calculator:PeakPowerCalculator. 

==Install 
  sudo gem install joule

==Usage
  require 'joule'
  
  parser = Joule::SRM::Parser.new(IO.read("sample_srm_file.srm"))
  parser.parse(
    :calculate_marker_values => true, 
    :calculate_peak_power_values => true, 
    :durations => [5, 300, 1200])

  # parser.data_points is an Array containing all the DataPoint objects.
  parser.data_points.each { |v| 
    puts "--Data Point--"
    puts "Time: #{v.time}"
    puts "Power: #{v.power}"
  }

  # parser.markers is an Array containing all the Marker objects.  The first 
  # marker always represents the entire file.
  parser.markers.each { |v| 
    puts "--Marker--"
    puts "Duration: #{v.duration_seconds}"
    puts "Average Power: #{v.average_power}"
    puts "Normalized Power: #{v.average_power}"
  }

  # parser.peak_powers is an Array of Hash objects representing the peak 
  # powers for a give duration (5 second, 5 minute, 20   minute, etc).  This 
  # is also sometimes referred to the mean maximal power.
  parser.peak_powers.each { |v|
    puts "--Peak Power--"
    puts "Duration: #{v.duration}"
    puts "Peak Power: #{v.value}"
  } 

== Dependencies

* nokogiri
* fastercsv

== License

(The MIT License)

Copyright (c) 2008 - 2010 Andrew Olson

Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the ‘Software’), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED ‘AS IS’, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.